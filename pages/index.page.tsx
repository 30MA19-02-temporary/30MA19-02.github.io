import fs from 'fs';
import matter from 'gray-matter';
import Link from 'next/link';
import type { GetStaticProps, InferGetStaticPropsType, NextPage } from 'next';
import path from 'path';
import { postFilePaths, POSTS_PATH } from '../utils/mdxUtils';
import type { ParsedUrlQuery } from 'querystring';

interface IParams extends ParsedUrlQuery {
  name: string;
}
interface IProps {
  posts: {
    content: string;
    data: { [key: string]: any };
    filePath: string;
  }[];
  p: string;
}
export const getStaticProps: GetStaticProps<IProps, IParams> = () => {
  const posts = postFilePaths.map((filePath) => {
    const source = fs.readFileSync(path.join(POSTS_PATH, filePath));
    const { content, data } = matter(source);

    return {
      content,
      data,
      filePath,
    };
  });

  return { props: { posts, p: postFilePaths.toString() } };
};

const Post: NextPage<InferGetStaticPropsType<typeof getStaticProps>> = ({ posts, p }) => {
  console.log(p);
  return (
    <>
      <h1>Home Page</h1>
      <p>
        Click the link below to navigate to a page generated by <code>next-mdx-remote</code>.
      </p>
      <ul>
        {posts.map((post) => (
          <li key={post.filePath}>
            <Link as={`/${post.filePath.replace(/\.mdx?$/, '')}`} href={`/[...name]`}>
              <a>{post.data.title}</a>
            </Link>
          </li>
        ))}
      </ul>
    </>
  );
};

export default Post;
